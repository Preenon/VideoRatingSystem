#BlueJ class context
comment0.params=
comment0.target=FileInterpreter()
comment0.text=\n\ Initializes\ a\ new\ file\ interpreter\ with\ \n\ its\ default\ characteristics.\n
comment1.params=
comment1.target=boolean\ setErrorFile()
comment1.text=\n\ Sets\ the\ error\ file\ of\ this\ interpreter.\n\ \n\ @return\ true\ if\ file\ could\ be\ created,\ false\ otherwise.\n
comment2.params=fileName
comment2.target=boolean\ accessAndInterpretFile(java.lang.String)
comment2.text=\n\ Accesses\ a\ file,\ and\ synthesizes\ video\ objects\ from\ it,\ \n\ using\ the\ data\ found\ in\ the\ file\ strings.\n\ \n\ @param\ fileName\ the\ name\ of\ the\ text\ file\n\ @return\ true\ if\ file\ could\ be\ accessed,\ false\ otherwise.\ \n
comment3.params=
comment3.target=java.util.ArrayList\ getVideoSet()
comment3.text=\n\ Returns\ an\ array\ list\ that\ contains\ video\ objects.\n\ \n\ @return\ the\ videos,\ each\ with\ filled\ arrays\ of\ VideoRating.\n
comment4.params=videoCreator
comment4.target=boolean\ videoDoesNotExist(java.lang.String)
comment4.text=\n\ Checks\ to\ see\ if\ this\ interpreter\ does\ not\ have\ \n\ a\ video\ with\ the\ given\ creator\ in\ its\ array\ list.\n\ \n\ @param\ \ videoCreator\ the\ name\ of\ who\ created\ the\ video\n\ @return\ true\ if\ video\ doesn't\ exist,\ false\ otherwise\n
comment5.params=
comment5.target=boolean\ getAndAnalyzeLine()
comment5.text=\n\ Gets\ and\ analyzes\ a\ line\ from\ this\ interpreter's\ accessor.\n\ \n\ @return\ true\ if\ we\ can\ analyze\ more\ lines,\ false\ otherwise\n
comment6.params=fileString
comment6.target=void\ analyzeLine(java.lang.String)
comment6.text=\n\ Analyzes\ a\ line,\ printing\ errror\ messages\ as\ needed.\n
comment7.params=fileString
comment7.target=void\ sortStringInformation(java.lang.String)
comment7.text=\n\ Splits\ a\ string\ into\ its\ tokens,\ and\ assigns\ \n\ data\ to\ new\ or\ existing\ videos\ based\ on\ token\ information.\n\ \n\ @param\ fileString\ a\ given\ string\ from\ the\ file\n
comment8.params=fileStringToken
comment8.target=java.lang.String\ determineVideoCreator(java.lang.String[])
comment8.text=\n\ Compiles\ specified\ string\ tokens\ to\ \n\ form\ and\ return\ a\ video\ creator's\ name.\n\ \n\ @param\ fileStringToken\ an\ array\ of\ string\ tokens\n\ @return\ the\ name\ of\ the\ creator\ of\ the\ video\n
comment9.params=fileStringToken
comment9.target=int[]\ determineRatingData(java.lang.String[])
comment9.text=\n\ Extract\ the\ rating\ data\ from\ a\ string\ token\ array,\ \n\ and\ build\ an\ array\ with\ them\ to\ return.\n\ \n\ @param\ fileStringToken\ an\ array\ of\ string\ tokens\n\ @return\ the\ ratings,\ compiled\ in\ an\ integer\ array\n
numComments=10
